@page "/profile"
@using GovOrdersApp.Data.Users
@inject NavigationManager navManager
@inject UserService userService
@inject IJSRuntime JS

<PageTitle>Профиль @user.Login</PageTitle>
<div class="d-flex flex-column justify-content-between" style="max-width: 45em; margin: 0 auto; padding-bottom: 5em;">
	<h3 class="align-self-center">Профиль @user.Login</h3>
<form @onsubmit="UpdateUser">
	@foreach (var item in userService.GetErrors())
	{
		<div class="form-control alert alert-danger">@item</div>
	}
			<label>Почта: @user.Email</label>
			<br />
			<label>Роль: @role</label>
			<br />
			<label>Телефон:</label>
			<input class="form-control" @bind="user.Phone" type="tel" />
			<br />
			<label>Старый пароль:</label>
			<input class="form-control" @bind="oldPassword" />
			<br />
			<label>Новый пароль:</label>
			<input class="form-control" @bind="newPassword" />
			<br />
			<label>Повторите новый пароль:</label>
			<input class="form-control" @bind="renewPassword" />
			<br />
	@if (role == "CustomerRole")
	{
			<label>ФИО:</label>
			<input class="form-control" @bind="((CustomerRole)user).FullName" />
			<br />
			<label>Должность:</label>
			<input class="form-control" @bind="((CustomerRole)user).Position" />
			<br />
			<label>Отрасль:</label>
			<select class="form-select" @bind="((CustomerRole)user).Industry">
				<option value="WaterSupply">Водоснабжение</option>
				<option value="Gasification">Газификация</option>
			</select>
			<br />
	}
	else if (role == "BuilderRole")
	{
			<label>Название организации:</label>
			<input class="form-control" @bind="((BuilderRole)user).FullName" />
		<br />
		<label>ИНН:</label>
				<input class="form-control" @bind="((BuilderRole)user).INN" />
		<br />
		<label>КПП:</label>
			<input class="form-control" @bind="((BuilderRole)user).KPP" />
		<br />
			<label>ОГРН:</label>
			<input class="form-control" @bind="((BuilderRole)user).OGRN" />
		<br />
		<label>Адрес:</label>
				<input class="form-control" @bind="((BuilderRole)user).Address" />
		<br />
		<label>ФИО руководителя:</label>
				<input class="form-control" @bind="((BuilderRole)user).Manager" />
		<br />
	}
	else if (role == "DesignerRole")
	{
		<label>Название организации:</label>
			<input class="form-control" @bind="((DesignerRole)user).FullName" />
		<br />
		<label>ИНН:</label>
				<input class="form-control" @bind="((DesignerRole)user).INN" />
		<br />
		<label>КПП:</label>
				<input class="form-control" @bind="((DesignerRole)user).KPP" />
		<br />
		<label>ОГРН:</label>
				<input class="form-control" @bind="((DesignerRole)user).OGRN" />
		<br />
		<label>Адрес:</label>
				<input class="form-control" @bind="((DesignerRole)user).Address" />
		<br />
		<label>ФИО руководителя:</label>
				<input class="form-control" @bind="((DesignerRole)user).Director" />
		<br />
		<label>Главный инженер проекта:</label>
				<input class="form-control" @bind="((DesignerRole)user).GIP" />
		<br />
	}
	<input class="btn btn-primary" type="submit" placeholder="Обновить профиль" />
</form>
	</div>
@code {
	AppUser user;
	string role = "";
	string oldPassword = "";
	string newPassword = "";
	string renewPassword = "";
	protected override void OnInitialized()
	{
		if (!AuthStateProvider.IsAuthenticated)
		{
			navManager.NavigateTo("login");
		}
		user = userService.GetCurrentUser();
		role = userService.GetRole();
	}

	private async void UpdateUser()
	{
		if (oldPassword != "" && newPassword != "" && renewPassword != "")
		{
			UpdatePassword();
		}
		if (userService.UpdateUser(user)) navManager.NavigateTo("");
		await JS.InvokeVoidAsync("scrollToTopfunc");
	}
	private void UpdatePassword()
	{
		if(userService.UpdatePassword(user, oldPassword, newPassword, renewPassword))
		{
			navManager.NavigateTo("");
		}
	}
}
