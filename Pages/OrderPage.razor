@page "/order/{Id}"
@using GovOrdersApp.Data.Orders
@using GovOrdersApp.Data.Users
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Primitives
@inject OrderService orderService
@inject NavigationManager navManager
@inject UserService userService

<PageTitle>Заказ</PageTitle>

<h1>Заказ</h1>

<form @onsubmit="UpdateOrder">
	<label>
		Название:
		<input @bind="order.Title" />
	</label>
	<br />
	<label>
		Описание:
		<textarea @bind="order.Description" />
	</label>
	<br />
	<label>
		Заказчик:
		@AuthorName
	</label>
	<br />
	<label>
		Застройщик:
		<select @bind="BuilderId">
			<option value="" disabled selected hidden>Выберите застройщика</option>
			@foreach (var item in builders)
			{
				<option value="@item.Id">@item.FullName</option>
			}
		</select>
	</label>
	<br />
	<label>
		Проектировщик:
		<select @bind="DesignerId">
			<option value="" disabled selected hidden>Выберите проектировщика</option>
			@foreach (var item in designers)
			{
				<option value="@item.Id">@item.FullName</option>
			}
		</select>
	</label>
	<br />
	<input class="btn btn-primary" type="submit" value="Обновить"/>
</form>
<div class="d-flex flex-column">
	Комменатрии:
	@foreach(var mes in order.Comments)
	{
	<div class="d-flex flex-row">
		<p>@userService.GetUser(mes.User).FullName</p>
		<p>@mes.Message</p>
		<h6>@(mes.Date.ToString("dd.MM.yyyy HH:mm"))</h6>
	</div>
	}
</div>
<form @onsubmit="AddMessage">
	<label>
		Текст сообщения:
		<input @bind="Message" />
	</label>
	<br />
	<input class="btn btn-primary" type="submit" placeholder="Отправить" />
</form>
@code {
	[Parameter]
	public string Id { get; set; } = "";

	Order order;
	List<AppUser> builders = new List<AppUser>();
	List<AppUser> designers = new List<AppUser>();
	string AuthorName = "";
	string BuilderId = "";
	string DesignerId = "";
	string Message = "";

	protected override void OnInitialized()
	{
		order = orderService.GetOrder(Id);
		try
		{
			AuthorName = userService.GetUser(order.Author).FullName;
			builders = userService.GetUsersByRole("BuilderRole");
			designers = userService.GetUsersByRole("DesignerRole");
		}
		catch 
		{ 
			navManager.NavigateTo(""); 
		}
	}

	private void UpdateOrder()
	{
		orderService.UpdateOrder(order);
	}

	private void AddMessage()
	{
		Comment comment = new Comment()
			{
				User = userService.GetId(),
				Message = Message
			};
		order.Comments.Add(comment);
		UpdateOrder();
	}
}
